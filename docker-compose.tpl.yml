version: '3.7'
services:

  main:
    build:
      context: ./sample_apps/go
      dockerfile: ./Dockerfile
    command:
      - air
    # from shell to docker-compose
    env_file:
      - ./.env
    # from docker-compose to container env
    environment:
      - REDIS_DSN
      - MONGO_DSN
      - POSTGRES_DSN
      - SECRET
      - PORT=${CONTAINER_PORT}
    {{- range .Values.envs }}
      - {{ .key }}:{{ .value }}
    {{-end }}
    ports:
      - "127.0.0.1:{{ .Values.port }}:9000/tcp"
    volumes:
      - ./:/app # mounts app from host for hot-reloading
      - gomodules:/go/pkg/mod
      {{- if .Values.db }}
      depends_on:
      {{- end }}
        {{- range .Values.db }}
        - {{ . }}
        {{- end }}

  {{- if .Values.mongo }}
  mongo:
    image: mongo:3.6
    env_file:
      - .mongo/.env
    volumes:
      - mongodb_data_container:/data/db
  {{- end }}

  {{- if .Values.postgres }}
  postgres:
    image: postgres:9.6
    hostname: postgres
    env_file:
      - .postgres/.env
    volumes:
      - .postgres/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
  {{- end }}

  {{- if .Values.redis }}
  redis:
    image: redis:6-alpine
    env_file:
      - .redis/.env
    volumes:
      - .redis/redis.conf:/usr/local/etc/redis/redis.conf
  {{- end }}

  {{- if .Values.rabbit }}
  rabbit:
    image: rabbitmq:3.8
    hostname: "rabbit"
    env_file:
      - ./.rabbitmq/.env
    volumes:
      - ./.rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      - ./.rabbitmq/rabbitmq-isolated.conf:/etc/rabbitmq/rabbitmq.config
      - ./.rabbitmq/logs/:/var/log/rabbitmq/
  {{- end }}

volumes:
  nodemodules: {}
  gomodules: {}
  mongodb_data_container: {}
